import { useState } from 'react';
import './todo.css';
interface ITasks {
    id: number;
    text: string;
    isCompleted: boolean;
}

const initialTasks: ITasks[] = [
    { id: 1, text: 'Buy milk', isCompleted: false },
    { id: 2, text: 'Walk the dog', isCompleted: true },
    { id: 3, text: 'Read a book', isCompleted: false },
];

export default function TodoList() {
    const [tasks, setTasks] = useState<ITasks[]>(initialTasks);
    const noTasks = tasks.every((task) => task.isCompleted);

    const toggleStatus = (taskId: number) => {
        const updateStatus = tasks.map((task) =>
            task.id === taskId
                ? { ...task, isCompleted: !task.isCompleted }
                : task
        );
        setTasks(updateStatus);
    };

    if (noTasks) {
        return <p>No Tasks!</p>;
    }
    return (
        <div>
            <h1>Task 2</h1>
            <ul>
                {tasks.map((task) => (
                    <li key={task.id}>
                        <input
                            type="checkbox"
                            checked={task.isCompleted}
                            onChange={() => toggleStatus(task.id)}
                        />
                        <span className={task.isCompleted ? 'isCompleted' : ''}>
                            {task.text}
                        </span>
                        <button onClick={() => toggleStatus(task.id)}>
                            Toggle Status
                        </button>
                    </li>
                ))}
            </ul>
        </div>
    );
}

// –£–º–æ–≤–∞:

// –°—Ç–≤–æ—Ä–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç, —è–∫–∏–π:

//     –ú–∞—î —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á (to-do):

//         –ö–æ–∂–Ω–∞ –∑–∞–¥–∞—á–∞ –º–∞—î: id, text, isCompleted

//     –ö–æ–∂–Ω–∞ –∑–∞–¥–∞—á–∞ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î—Ç—å—Å—è –∑—ñ —Å—Ç–∞—Ç—É—Å–æ–º (‚úÖ –∞–±–æ ‚è≥)

//     –Ñ –∫–Ω–æ–ø–∫–∞ "–ó–º—ñ–Ω–∏—Ç–∏ —Å—Ç–∞—Ç—É—Å" ‚Äî –ø–µ—Ä–µ–≤–µ—Ä—Ç–∞—î isCompleted (true ‚áÑ false)

//     –ó–∞–≤–µ—Ä—à–µ–Ω—ñ –∑–∞–¥–∞—á—ñ ‚Äî –ø–æ–∫–∞–∑—É—é—Ç—å—Å—è –∑ –ø–µ—Ä–µ–∫—Ä–µ—Å–ª–µ–Ω–∏–º —Ç–µ–∫—Å—Ç–æ–º (–∞–±–æ –∑–µ–ª–µ–Ω–∏–º –∫–æ–ª—å–æ—Ä–æ–º)

// üß† –ü—Ä–∏–∫–ª–∞–¥ –∑–∞–¥–∞—á:

// üî® –©–æ –º–∞—î –±—É—Ç–∏:

//     useState –¥–ª—è –º–∞—Å–∏–≤—É –∑–∞–¥–∞—á ‚úÖ

//     –∫–Ω–æ–ø–∫–∞ "Toggle Status" üü∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–æ–ª—è isCompleted

//     —Å—Ç–∏–ª—ñ–∑–∞—Ü—ñ—è (–ø–µ—Ä–µ–∫—Ä–µ—Å–ª–µ–Ω–∏–π –∞–±–æ –∑–µ–ª–µ–Ω–∏–π/—Å—ñ—Ä–∏–π) –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —Å—Ç–∞—Ç—É—Å—É

//     —è–∫—â–æ –∑–∞–¥–∞—á –Ω–µ–º–∞—î ‚Äî –ø–æ–∫–∞–∑–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è No tasks
